#!/usr/bin/env ruby
require "thor"

class Appa < Thor
  include Thor::Actions

  desc "new TEMPLATE", "a new Latex document"
  method_option :name, aliases: "-name", required: true, desc: "name of the new document"
  def new(template)
    dest_folder = "#{options[:name]}"
    dest_folder.empty? ? dest_folder : "untitled_document" # TODO: fix the permission denied error
    case template
      when "blank"
        puts "using a #{template} template"
      when "science"
        puts "using a #{template} template"
      when "presentation"
        puts "using a #{template} template"
      when "invoice"
        puts "using a #{template} template"
      else
        puts "no template specified"
    end
    render_templates(template, dest_folder)
  end

  desc "Open a Latex pdf document with latexmk and a .tex file", "opens a tex file with latexmk and document viewer"
  def open(file)
    # TODO: check if the file exists in current dir or further down the tree
    unless File.exist?("#{file}")
      puts "file not found"
      exit
    end
    # open the pdf, open with document viewer and then open in vim
    %x( xdg-open "#{file.split(".").first}.pdf" ; gnome-terminal -x sh -c "latexmk -pvc -pdf #{file}; zsh" ; gnome-terminal -x sh -c "vi #{file}; zsh"  )
  end

  desc "Provides templates", "generates templates for new documents"
  def render_templates(folder, dest_folder)
    directory "../src/#{folder}", "#{dest_folder}"
    copy_file "../src/Makefile",  "#{dest_folder}/Makefile"
  end

  def self.source_root
    File.dirname(__FILE__)
  end
end

Appa.start(ARGV)
